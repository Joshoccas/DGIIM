/*! \mainpage Práctica 2: Abstracción. TDA Imagen

@image html intro.png

# Introducción

--

En esta práctica trabajaremos sobre la [clase Image](file:///home/agd3/Desktop/ED/practica_imagenesJ/cmake-build-debug/doc_doxygen/html/classImage.html),
cuyos métodos primitivos ya han sido implementados. El TDA Image representa imágenes en formato PGM, cuyos píxeles toman
valores en una escala de grises de 0 a 255.


Añadimos como métodos de la clase distintas operaciones a realizar con una imagen PGM: invertir el valor de sus bytes en la
escala de grises, recortar una imagen, hacer zoom sobre ella, crear un icono de esta, modificar su contraste y barajar sus
filas.
Utilizamos cada uno de estos métodos en un ejecutable que recibe una imagen como argumento y devuelve el resultado de aplicar
el método que corresponda para comprobar su correcto funcionamiento.

Los métodos auxiliares que hemos implementado para opepuedanrar con imágenes PGM, nos ofrecen la posibilidad de
invertir una imagen, recortarla, hacer zoom sobre ella, generar un icono, aumentar o disminuir su contraste, y barajar
sus filas. Estos métodos se encuentran implementados en el archivo fuente imageop.cpp, y los ejecutables que se describen
a continuación prueban su correcto funcionamiento.

Buscando aumentar la eficiencia, hemos modificado ciertos métodos primitivos, de manera que en estos no se supone que en
la representación interna de la clase byte ** img apunte a una lista de byte * consecutivos en memoria. Es decir, hemos
optado por mantener la implementación como hasta ahora pero dejar de asumir que img[i+1] == img[i]+cols tan pronto como la
matriz queda inicializada.


# Ejecutables

--

@image html negativo.png
## Negativo:

Calcula el negativo de una imagen
Recibe la ruta a una imagen, objeto que llama al método Image::Invert()
El negativo de un píxel con valor *x* será *255-x*.

> __negativo__ \<FichImagenOriginal\> \<FichImagenDestino\>
@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular el negativo
@param <FichImagenDestino> Imagen PGM resultado de calcular el negativo


@image html subimagen.png
## Subimagen:

Genera una subimagen

Se utiliza el método Image::Crop(), que devuelve una nueva imagen de tamaño _FilasSubimagen * ColumnasSubimagen_,
cuyos píxeles tendrán el mismo valor que los de la imagen original a partir de la fila _FilaSupIzq_ y columna _ColumnaSupIzq_.

> __subimagen__ \<FichImagenOriginal\> \<FichImagenDestino\> \<FilaSupIzq\> \<ColumnaSupIzq\> \<FilasSubimagen\> \<ColumnasSubimagen\>
@param "<FichImagenOriginal>" Imagen PGM original de la que se va a generar una subimagen
@param <FichImagenDestino> Imagen PGM con el recorte
@param <FilaSupIzq> Fila inicial para recortar
@param <ColumnaSupIzq> Columna inicial para recortar
@param <FilasSubimagen> Número de filas del recorte
@param <ColumnasSubimagen> Número de columnas del recorte


@image html zoom.png
## Zoom:

Genera una imagen aumentada 2x

Se hace un recorte de la imagen con el método Image::Crop() y después la subimagen generada llama a Image::Zoom2X().
Este método introduce una nueva columna (resp. fila) entre cada dos columnas (resp. filas) de la imagen cuyos valores
son la media de los píxeles que tiene a la izquierda y la derecha (resp. arriba y abajo). Los píxeles que quedan entre los
nuevos valores asignados serán media de los 4 píxeles de sus diagonales (que pertenecen a la imagen original).

> __zoom__ \<FichImagenOriginal\> \<FichImagenDestino\> \<FilaSupIzq\> \<ColumnaSupIzq\> \<LadoImagenAumentada\>
@param "<FichImagenOriginal>" Imagen PGM original
@param <FichImagenDestino> Imagen PGM aumentada
@param <FilaSupIzq> Fila inicial para recortar
@param <ColumnaSupIzq> Columna inicial para recortar
@param <LadoImagenAumentada> Número de filas y columnas de la imagen aumentada


@image html icono.png
## Icono:

Genera un icono como reducción de una imagen.

Llama al método Image::Subsample(). Para una reducción de _n_ x cada píxel de la salida es la media de los _n_ x _n_ píxeles
de la entrada. El icono tendrá tamaño _rows * cols / n²_.

> __icono__ \<FichImagenOriginal\> \<FichImagenDestino\> \<Factor\>
@param "<FichImagenOriginal>" Imagen PGM original
@param <FichImagenDestino> Imagen PGM con el icono
@param <Factor> Factor de reducción. La imagen resultante tendrá floor(filas/factor) x floor(cols/factor)


@image html contraste.png
## Contraste:

Modifica el contraste de una imagen PGM.


Este programa prueba el funcionamiento de Image::AdjustContrast(). Se asignan nuevos valores a los píxeles con una
transformación lineal a trozos:

> _T(x) = min + [((max – min) / (b – a)) \* (x – a)]_

Siendo *T(x)* es el nuevo valor del píxel con valor *x* tal que *a <= x <= b*. Por tanto, los nuevos
valores de los píxeles estarán en el rango:

- [0, s1[ si sus valores iniciales están en [0,e1[,
- [s1, s2] si sus valores iniciales están en [e1,e2], y
- ]s2, 255] si sus valores iniciales están en ]e2,255].

Podemos observar el comportamiento de la función en esta gráfica:

@image html grafica_contraste.png

> __contraste__ \<FichImagenOriginal\> \<FichImagenDestino\> \<UmbralInferiorIn\> \<UmbralSuperiorIn\> \<UmbralInferiorOut\> \<UmbralSuperiorOut\>
@param <FichImagenOriginal> Imagen PGM a la que se va a aumentar el contraste
@param <FichImagenDestino> Imagen PGM resultado de modificar el contraste
@param <UmbralInferiorIn> Umbral inferior de la imagen de entrada
@param <UmbralSuperiorIn> Umbral superior de la imagen de entrada
@param <UmbralInferiorOut> Umbral inferior de la imagen de salida
@param <UmbralSuperiorOut> Umbral superior de la imagen de salida


@image html barajar.png
## Barajar:

Genera una imagen PGM a partir de otra barajando sus filas pseudoaleatoriamente.

Utiliza Image::ShuffleRows(), que genera una nueva imagen igual que la original pero con las filas
ordenadas según

> _r' = (r*p) mod rows_

donde _r'_ es el nuevo índice de la fila _r_ y _p = 9973_ es un coprimo de _rows_.

> __contraste__ \<FichImagenOriginal\> \<FichImagenDestino\>
@param <FichImagenOriginal> Imagen PGM cuyas filas se van a barajar
@param <FichImagenDestino> Imagen PGM resultado de barajar las filas

Ver [Estudio de Eficiencia](file:///home/agd3/Desktop/ED/practica_imagenesJ/cmake-build-debug/doc_doxygen/html/eficiencia.html)

*/
